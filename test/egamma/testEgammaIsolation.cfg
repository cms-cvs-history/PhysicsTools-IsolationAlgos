process testEgamma  = {
    #include "FWCore/MessageService/data/MessageLogger.cfi"
    source = PoolSource {
        untracked vstring fileNames = {  'file:in.root' 
        }
    }
    #include "PhysicsTools/IsolationAlgos/test/egamma/CSA07Electron-Chowder-AODSIM.cff"
    #include "PhysicsTools/IsolationAlgos/test/egamma/RelValHiggsGammaGammaM120.cff"
    #include "PhysicsTools/IsolationAlgos/test/egamma/RelValTTbar.cff"
    #include "PhysicsTools/IsolationAlgos/test/egamma/RelValZPrimeEEM1000.cff"

    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff"

    include "PhysicsTools/IsolationAlgos/test/egamma/egammaDepositProducers.cff"
    include "PhysicsTools/IsolationAlgos/test/egamma/egammaIsolatorsFromDeposits.cff"
    include "PhysicsTools/IsolationAlgos/test/egamma/testEgammaIsolation.cff"
    #path aod = { aodEgammaDeposits, aodIsolatorsFromDeposits, egammaIsoFromAOD  }
    path all = { allEgammaDeposits, allIsolatorsFromDeposits, egammaIso }
    module out = PoolOutputModule {
        untracked string fileName = "out.root"
        untracked vstring outputCommands = {
            "drop *",
            "keep *_muons_*_*",
            "keep *_photons_*_*",
            "keep *_pixelMatchGsfElectrons_*_*",
            "keep *_*_*_testEgamma"
        }
    }
    untracked PSet maxEvents = { untracked int32 input = 100 }
    untracked PSet options   = { untracked bool wantSummary = true }
    endpath e = { out }
}
